<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用matlab实现排序问题</title>
      <link href="/2022/01/25/port/"/>
      <url>/2022/01/25/port/</url>
      
        <content type="html"><![CDATA[<h6 id="请学习遍历排序，冒泡排序，快速排序算法，画出3种算法的流程图（从小到大排序），并分析3种排序方法的时间复杂度。"><a href="#请学习遍历排序，冒泡排序，快速排序算法，画出3种算法的流程图（从小到大排序），并分析3种排序方法的时间复杂度。" class="headerlink" title="请学习遍历排序，冒泡排序，快速排序算法，画出3种算法的流程图（从小到大排序），并分析3种排序方法的时间复杂度。"></a>请学习遍历排序，冒泡排序，快速排序算法，画出3种算法的流程图（从小到大排序），并分析3种排序方法的时间复杂度。</h6><ul><li><p>遍历排序</p><ul><li><p>原理:对待排序数组进行遍历，第一次取第一个数，然后把它和之后的所有数进行比较，范围为1 ~ n，找出最大的数，并将它放在最后一位，然后再从第一位开始，比较范围为1 ~ n-1，找出第二大的数，放置在倒数第二位，以此类推。</p></li><li><p>流程图</p><p><img src="/images/port/%E9%81%8D%E5%8E%86flowchart.png" alt=""></p></li><li><p>复杂度：共有两层循环，第一层循环划定比较的范围，第二层进行比较。其外层循环执行 n - 1次。内层循环最多的时候执行n次，最少的时候执行1次，平均执行 (n+1)/2次。所以循环体内的比较约执行 n(n-1)/2次，复杂度为$O(n^2)$。</p></li></ul></li><li><p>冒泡排序</p><ul><li><p>原理：对数组进行遍历，第一次遍历从数列第一项开始，比较相邻的两项，并且交换顺序排错的项，使每个局部的最大值放在正确的位置。第二次遍历从第二项开始，操作与第一遍一致，直至数组末尾。</p></li><li><p>流程图</p><p><img src="/images/port/%E5%86%92%E6%B3%A1flowchart.png" alt=""></p></li><li><p>复杂度</p><p>​       共有两层循环，第一层循环划定比较的范围，第二层进行比较和操作。其外层循环执行 $n - 1$次。内层循环最多的时候执行n次，最少的时候执行1次，平均执行 (n+1)/2次。所以循环体内的比较交换约执行 n(n-1)/2次，复杂度为$O(n^2)$。</p><p>​       按最为复杂的情况为例计算，每次比较都会有三次操作，第一轮共有n次比较，第二次共有n-1次，以此类推：</p></li></ul></li></ul><script type="math/tex; mode=display">sum = 3\times[n+(n-1)+(n-2)+...+2+1)]=3\times \frac{n\times (n-1)}{2}=\frac{3}{2}(n^2-n)\\    \therefore 复杂度为O(n^2)</script><ul><li><p>快速排序</p><ul><li><p>原理:先去确定一个基准数，通过一趟排序将要排序的数据分割成独立的两部分，其中基准数左边的一部分的所有数据比基准数小，基准数右边的所有数据要大于基准数，再按这种方法对这两部分数据分别进行快速排序，直至每部分都只有一个数时结束。整个排序过程可以递归进行，使整个数据变成有序序列。</p></li><li><p>流程图</p><p>快速排序算法通过多次比较和交换来实现排序，其排序流程如下： </p><ul><li><p>首先设定一个分界值，通过该分界值将数组分成左右两部分。 </p></li><li><p>将大于或等于分界值的数据集中到数组右边，小于分界值的数据集中到数组的左边。此时，左边部分中各元素都小于或等于分界值，而右边部分中各元素都大于或等于分界值。 </p></li><li><p>然后，左边和右边的数据可以独立排序。对于左侧的数组数据，又可以取一个分界值，将该部分数据分成左右两部分，同样在左边放置较小值，右边放置较大值。右侧的数组数据也可以做类似处理。</p></li><li><p>重复上述过程，可以看出，这是一个递归定义。通过递归将左侧部分排好序后，再递归排好右侧部分的顺序。当左、右两个部分各数据排序完成后，整个数组的排序也就完成了。</p><p>一次排序的流程图：</p></li></ul><p><img src="/images/port/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F.png" alt=""></p></li><li><p>复杂度</p><p>设n为待排序数组中的元素个数，$T(n)$为算法需要的时间复杂度，则</p><script type="math/tex; mode=display">T(n)=\begin{cases}D(1)& \text{n$\le$1}\\D(n)+T(I_1)+T(I_2)& \text{n>1}\end{cases}</script><p>​                   其中$D(n)=n-1$，为一次快排需要的比较次数，一次快排结束后将数组分为两部分$I_1,I_2$。</p></li></ul></li></ul><p>​                  最好情况下，每一次划分正好将数组分为长度相等的两半</p><script type="math/tex; mode=display">T(n)=\begin{cases}      D(1)& \text{n$\le$1} \\      D(n)+T(n/2)+T(n/2)& \text{n>1}      \end{cases}      \\T(n)=D(n)+2T(n/2)=...=D(n)+2D(n/2)+...+2^kD(n/2^k)\\      =n-1+2(n/2-1)+...+2^k(n/2^k-1)\\      =n-1+n-2+...+n-2^k\\      \because k = log_x n\\      \therefore 原式 = (k+1)n-(1+2+...+2^k)\\      =(k+1)-\frac{2^0(1-2^{k+1})}{1-2}\\      =(k+1)n-2·2^k+1\\      =nlog_2n-n+1\sim O(nlog_2n)</script><p>​                最坏的情况：每次划分都将数组分为了1和n-1两部分</p><script type="math/tex; mode=display">T(n)=\begin{cases}      D(1)& \text{n$\le$1}\\      D(n)+T(1)+T(n-1)& \text{n>1}      \end{cases}      \\      T(n)=D(n)+T(n-1)=D(n)+D(n-1)+T(n-2)\\      =D(n)+D(n-1)+D(n-2)+...+D(1)\\      =n-1+n-2+...+1+0\\      =\frac{n(n-1)}{2}\sim O(n^2)</script><p>​                   平均时间复杂度：任意一种划分情况出现的概率都相等</p><script type="math/tex; mode=display">T(n)=D(n)+\frac{1}{n}\sum_{i=0}^{n-1}[T(i)+T(n-i)]=D(n)+\frac{2}{n}\sum_{i=0}^{n-1}T(i)\\      T(n-1)=D(n-1)+\frac{2}{n-1}\sum_{i=0}^{n-2}T(i)\\      \therefore nT(n)-(n-1)T(n-1)=2(n-1)+2T(n-1)\\      \frac{T(n)}{n+1}=\frac{T(n-1)}{n}+\frac{2(n-1)}{n(n+1)}\\      \therefore B(n)=\frac{T(n)}{n+1},得B(n)-B(n-1)=\frac{2(n-1)}{n(n+1)}\\      可展开该递推式：B(n)=B(n-1)+\frac{2(n-1)}{n(n+1)}\\      =B(n-2)+\frac{2(n-2)}{n(n-1)}+\frac{2(n-1)}{n(n+1)}=B(1)+\sum_{i=1}^n\frac{2(i-1)}{i(i+1)}\\      =0+\sum_{i=1}^n[\frac{2}{i}-\frac{4}{i(i+1)}]=\sum_{i=1}^n\frac{2}{i}-4\sum_{i=1}^n[\frac{1}{i}-\frac{1}{i+1}]=\sum_{i=1}^n\frac{2}{i}-\frac{4n}{n+1}\\      \approx 2(ln(n)+0.577)-\frac{4n}{n+1}\\      \therefore T(n)=(n+1)B(n)=2(n+1)(ln(n)+0.577)-4n=2nlnn-2.846n+1.154\sim O(nlog_2n)</script><ul><li>所以，快速排序最好时间复杂度为 $O(nlog_2n)$ ,最坏时间复杂度为$O(n^2)$ ,平均时间复杂度为 $O(nlog_2n)$</li></ul><h6 id="请自行编写程序完成三种排序，但数据集均为-0，1-之间的浮点数时，比较上述三种算法及matlab内置排序sort函数的快慢。"><a href="#请自行编写程序完成三种排序，但数据集均为-0，1-之间的浮点数时，比较上述三种算法及matlab内置排序sort函数的快慢。" class="headerlink" title="请自行编写程序完成三种排序，但数据集均为[0，1]之间的浮点数时，比较上述三种算法及matlab内置排序sort函数的快慢。"></a>请自行编写程序完成三种排序，但数据集均为[0，1]之间的浮点数时，比较上述三种算法及matlab内置排序sort函数的快慢。</h6><ul><li><p>遍历排序</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">output</span> = <span class="title">traverse</span><span class="params">(input)</span></span></span><br><span class="line"><span class="comment">%TRAVERSE 遍历排序函数</span></span><br><span class="line">    n=<span class="built_in">length</span>(input);</span><br><span class="line">    x = input;</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">        amin = x(<span class="number">1</span>);</span><br><span class="line">        mini = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:n-<span class="built_in">i</span>      </span><br><span class="line">            <span class="keyword">if</span> amin &gt;= x(<span class="built_in">j</span>+<span class="number">1</span>)</span><br><span class="line">                amin = x(<span class="built_in">j</span>+<span class="number">1</span>);</span><br><span class="line">                mini = <span class="built_in">j</span>+<span class="number">1</span>;</span><br><span class="line">                <span class="built_in">j</span> = <span class="built_in">j</span> + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        x(n+<span class="number">1</span>)=amin;</span><br><span class="line">        x(mini)=[];</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    output = x;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p>冒泡排序</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">output</span> = <span class="title">bubble</span><span class="params">(input)</span></span></span><br><span class="line"><span class="comment">%BUBBLE 冒泡排序函数</span></span><br><span class="line">    n=<span class="built_in">length</span>(input);</span><br><span class="line">    x = input;</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:n-<span class="built_in">i</span></span><br><span class="line">            <span class="keyword">if</span> x(<span class="built_in">j</span>)&gt;x(<span class="built_in">j</span>+<span class="number">1</span>)</span><br><span class="line">                t = x(<span class="built_in">j</span>);</span><br><span class="line">                x(<span class="built_in">j</span>) = x(<span class="built_in">j</span>+<span class="number">1</span>);</span><br><span class="line">                x(<span class="built_in">j</span>+<span class="number">1</span>) = t;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    output = x;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p>快速排序</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">output</span>=<span class="title">quick_sort</span><span class="params">(intput,low,high)</span></span></span><br><span class="line"><span class="comment">%QUICK 快排函数</span></span><br><span class="line">    n=<span class="built_in">length</span>(intput);</span><br><span class="line">    x = intput;</span><br><span class="line">    <span class="keyword">if</span> low&lt;high</span><br><span class="line">        [x,key]=getkey(x,low,high);</span><br><span class="line">        x=quick_sort(x,low,key<span class="number">-1</span>);</span><br><span class="line">        x=quick_sort(x,key+<span class="number">1</span>,high);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    output = x;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[x,index]</span>=<span class="title">getkey</span><span class="params">(x,i,j)</span></span></span><br><span class="line">    key=x(<span class="built_in">i</span>);</span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">i</span>&lt;<span class="built_in">j</span></span><br><span class="line">        <span class="keyword">while</span> <span class="built_in">i</span>&lt;<span class="built_in">j</span> &amp;&amp; x(<span class="built_in">j</span>)&gt;=key</span><br><span class="line">            <span class="built_in">j</span>=<span class="built_in">j</span><span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">i</span>&lt;<span class="built_in">j</span></span><br><span class="line">            x(<span class="built_in">i</span>)=x(<span class="built_in">j</span>);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="built_in">i</span>&lt;<span class="built_in">j</span> &amp;&amp; x(<span class="built_in">i</span>)&lt;=key</span><br><span class="line">            <span class="built_in">i</span>=<span class="built_in">i</span>+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">i</span>&lt;<span class="built_in">j</span></span><br><span class="line">            x(<span class="built_in">j</span>)=x(<span class="built_in">i</span>);  </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    x(<span class="built_in">i</span>)=key;</span><br><span class="line">    index=<span class="built_in">i</span>;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p>比较快慢（对于大小在[0,1]之间的浮点数，取长度为10，100，1000来计算）</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> =<span class="number">1</span>:<span class="number">10</span></span><br><span class="line">    x = <span class="built_in">rand</span>(<span class="number">1</span>,<span class="number">10</span>);</span><br><span class="line">    tic;x1 = traverse(x);</span><br><span class="line">    t1(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x2 = bubble(x);</span><br><span class="line">    t2(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x3 = quick_sort(x,<span class="number">1</span>,<span class="built_in">length</span>(x));</span><br><span class="line">    t3(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x4 = <span class="built_in">sort</span>(x);</span><br><span class="line">    t4(<span class="built_in">i</span>) = toc;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fprintf(<span class="string">&quot;数组长度为10时\n遍历排序耗时%fs\n冒泡排序耗时%fs\n快速排序耗时%fs\nsort排序耗时%fs\n&quot;</span>,<span class="built_in">mean</span>(t1),<span class="built_in">mean</span>(t2),<span class="built_in">mean</span>(t3),<span class="built_in">mean</span>(t4))</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> =<span class="number">1</span>:<span class="number">10</span></span><br><span class="line">    x = <span class="built_in">rand</span>(<span class="number">1</span>,<span class="number">100</span>);</span><br><span class="line">    tic;x1 = traverse(x);</span><br><span class="line">    t1(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x2 = bubble(x);</span><br><span class="line">    t2(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x3 = quick_sort(x,<span class="number">1</span>,<span class="built_in">length</span>(x));</span><br><span class="line">    t3(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x4 = <span class="built_in">sort</span>(x);</span><br><span class="line">    t4(<span class="built_in">i</span>) = toc;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fprintf(<span class="string">&quot;数组长度为100时\n遍历排序耗时%fs\n冒泡排序耗时%fs\n快速排序耗时%fs\nsort排序耗时%fs\n&quot;</span>,<span class="built_in">mean</span>(t1),<span class="built_in">mean</span>(t2),<span class="built_in">mean</span>(t3),<span class="built_in">mean</span>(t4))</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> =<span class="number">1</span>:<span class="number">10</span></span><br><span class="line">    x = <span class="built_in">rand</span>(<span class="number">1</span>,<span class="number">1000</span>);</span><br><span class="line">    tic;x1 = traverse(x);</span><br><span class="line">    t1(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x2 = bubble(x);</span><br><span class="line">    t2(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x3 = quick_sort(x,<span class="number">1</span>,<span class="built_in">length</span>(x));</span><br><span class="line">    t3(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x4 = <span class="built_in">sort</span>(x);</span><br><span class="line">    t4(<span class="built_in">i</span>) = toc;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fprintf(<span class="string">&quot;数组长度为1000时\n遍历排序耗时%fs\n冒泡排序耗时%fs\n快速排序耗时%fs\nsort排序耗时%fs\n&quot;</span>,<span class="built_in">mean</span>(t1),<span class="built_in">mean</span>(t2),<span class="built_in">mean</span>(t3),<span class="built_in">mean</span>(t4))</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> =<span class="number">1</span>:<span class="number">10</span></span><br><span class="line">    x = <span class="built_in">rand</span>(<span class="number">1</span>,<span class="number">10000</span>);</span><br><span class="line">    tic;x1 = traverse(x);</span><br><span class="line">    t1(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x2 = bubble(x);</span><br><span class="line">    t2(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x3 = quick_sort(x,<span class="number">1</span>,<span class="built_in">length</span>(x));</span><br><span class="line">    t3(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x4 = <span class="built_in">sort</span>(x);</span><br><span class="line">    t4(<span class="built_in">i</span>) = toc;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fprintf(<span class="string">&quot;数组长度为10000时\n遍历排序耗时%fs\n冒泡排序耗时%fs\n快速排序耗时%fs\nsort排序耗时%fs\n&quot;</span>,<span class="built_in">mean</span>(t1),<span class="built_in">mean</span>(t2),<span class="built_in">mean</span>(t3),<span class="built_in">mean</span>(t4))</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">数组长度为<span class="number">10</span>时</span><br><span class="line">遍历排序耗时<span class="number">0.000017</span>s</span><br><span class="line">冒泡排序耗时<span class="number">0.000002</span>s</span><br><span class="line">快速排序耗时<span class="number">0.000004</span>s</span><br><span class="line"><span class="built_in">sort</span>排序耗时<span class="number">0.000002</span>s</span><br><span class="line">数组长度为<span class="number">100</span>时</span><br><span class="line">遍历排序耗时<span class="number">0.000148</span>s</span><br><span class="line">冒泡排序耗时<span class="number">0.000034</span>s</span><br><span class="line">快速排序耗时<span class="number">0.000028</span>s</span><br><span class="line"><span class="built_in">sort</span>排序耗时<span class="number">0.000004</span>s</span><br><span class="line">数组长度为<span class="number">1000</span>时</span><br><span class="line">遍历排序耗时<span class="number">0.003035</span>s</span><br><span class="line">冒泡排序耗时<span class="number">0.002749</span>s</span><br><span class="line">快速排序耗时<span class="number">0.000312</span>s</span><br><span class="line"><span class="built_in">sort</span>排序耗时<span class="number">0.000035</span>s</span><br><span class="line">数组长度为<span class="number">10000</span>时</span><br><span class="line">遍历排序耗时<span class="number">0.283688</span>s</span><br><span class="line">冒泡排序耗时<span class="number">0.280093</span>s</span><br><span class="line">快速排序耗时<span class="number">0.032537</span>s</span><br><span class="line"><span class="built_in">sort</span>排序耗时<span class="number">0.000263</span>s</span><br></pre></td></tr></table></figure><p>说明：可以根据结果看出，对于大小在[0,1]之间的浮点数，四种排序方法速度从快到慢为：sort&gt;快排&gt;冒泡&gt;遍历</p></li></ul><h6 id="针对上面的数据集，验证3种算法的时间复杂度，若数据集均为-0-10-之间的整数，结果又如何？为什么会这样。"><a href="#针对上面的数据集，验证3种算法的时间复杂度，若数据集均为-0-10-之间的整数，结果又如何？为什么会这样。" class="headerlink" title="针对上面的数据集，验证3种算法的时间复杂度，若数据集均为[0,10]之间的整数，结果又如何？为什么会这样。"></a>针对上面的数据集，验证3种算法的时间复杂度，若数据集均为[0,10]之间的整数，结果又如何？为什么会这样。</h6><ul><li><p>若数据集均为[0,10]之间的整数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> =<span class="number">1</span>:<span class="number">10</span></span><br><span class="line">    x = <span class="built_in">round</span>(<span class="built_in">rand</span>(<span class="number">1</span>,<span class="number">10</span>)*<span class="number">10</span>);</span><br><span class="line">    tic;x1 = traverse(x);</span><br><span class="line">    t1(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x2 = bubble(x);</span><br><span class="line">    t2(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x3 = quick_sort(x,<span class="number">1</span>,<span class="built_in">length</span>(x));</span><br><span class="line">    t3(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x4 = <span class="built_in">sort</span>(x);</span><br><span class="line">    t4(<span class="built_in">i</span>) = toc;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fprintf(<span class="string">&quot;数组长度为10时\n遍历排序耗时%fs\n冒泡排序耗时%fs\n快速排序耗时%fs\nsort排序耗时%fs\n&quot;</span>,<span class="built_in">mean</span>(t1),<span class="built_in">mean</span>(t2),<span class="built_in">mean</span>(t3),<span class="built_in">mean</span>(t4))</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> =<span class="number">1</span>:<span class="number">10</span></span><br><span class="line">    x = <span class="built_in">round</span>(<span class="built_in">rand</span>(<span class="number">1</span>,<span class="number">100</span>)*<span class="number">10</span>);</span><br><span class="line">    tic;x1 = traverse(x);</span><br><span class="line">    t1(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x2 = bubble(x);</span><br><span class="line">    t2(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x3 = quick_sort(x,<span class="number">1</span>,<span class="built_in">length</span>(x));</span><br><span class="line">    t3(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x4 = <span class="built_in">sort</span>(x);</span><br><span class="line">    t4(<span class="built_in">i</span>) = toc;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fprintf(<span class="string">&quot;数组长度为100时\n遍历排序耗时%fs\n冒泡排序耗时%fs\n快速排序耗时%fs\nsort排序耗时%fs\n&quot;</span>,<span class="built_in">mean</span>(t1),<span class="built_in">mean</span>(t2),<span class="built_in">mean</span>(t3),<span class="built_in">mean</span>(t4))</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> =<span class="number">1</span>:<span class="number">10</span></span><br><span class="line">    x = <span class="built_in">round</span>(<span class="built_in">rand</span>(<span class="number">1</span>,<span class="number">1000</span>)*<span class="number">10</span>);</span><br><span class="line">    tic;x1 = traverse(x);</span><br><span class="line">    t1(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x2 = bubble(x);</span><br><span class="line">    t2(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x3 = quick_sort(x,<span class="number">1</span>,<span class="built_in">length</span>(x));</span><br><span class="line">    t3(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x4 = <span class="built_in">sort</span>(x);</span><br><span class="line">    t4(<span class="built_in">i</span>) = toc;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fprintf(<span class="string">&quot;数组长度为1000时\n遍历排序耗时%fs\n冒泡排序耗时%fs\n快速排序耗时%fs\nsort排序耗时%fs\n&quot;</span>,<span class="built_in">mean</span>(t1),<span class="built_in">mean</span>(t2),<span class="built_in">mean</span>(t3),<span class="built_in">mean</span>(t4))</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> =<span class="number">1</span>:<span class="number">10</span></span><br><span class="line">    x = <span class="built_in">round</span>(<span class="built_in">rand</span>(<span class="number">1</span>,<span class="number">10000</span>)*<span class="number">10</span>);</span><br><span class="line">    tic;x1 = traverse(x);</span><br><span class="line">    t1(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x2 = bubble(x);</span><br><span class="line">    t2(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x3 = quick_sort(x,<span class="number">1</span>,<span class="built_in">length</span>(x));</span><br><span class="line">    t3(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x4 = <span class="built_in">sort</span>(x);</span><br><span class="line">    t4(<span class="built_in">i</span>) = toc;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fprintf(<span class="string">&quot;数组长度为10000时\n遍历排序耗时%fs\n冒泡排序耗时%fs\n快速排序耗时%fs\nsort排序耗时%fs\n&quot;</span>,<span class="built_in">mean</span>(t1),<span class="built_in">mean</span>(t2),<span class="built_in">mean</span>(t3),<span class="built_in">mean</span>(t4))</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">数组长度为<span class="number">10</span>时</span><br><span class="line">遍历排序耗时<span class="number">0.000016</span>s</span><br><span class="line">冒泡排序耗时<span class="number">0.000004</span>s</span><br><span class="line">快速排序耗时<span class="number">0.000004</span>s</span><br><span class="line"><span class="built_in">sort</span>排序耗时<span class="number">0.000002</span>s</span><br><span class="line">数组长度为<span class="number">100</span>时</span><br><span class="line">遍历排序耗时<span class="number">0.000154</span>s</span><br><span class="line">冒泡排序耗时<span class="number">0.000035</span>s</span><br><span class="line">快速排序耗时<span class="number">0.000033</span>s</span><br><span class="line"><span class="built_in">sort</span>排序耗时<span class="number">0.000004</span>s</span><br><span class="line">数组长度为<span class="number">1000</span>时</span><br><span class="line">遍历排序耗时<span class="number">0.003092</span>s</span><br><span class="line">冒泡排序耗时<span class="number">0.002701</span>s</span><br><span class="line">快速排序耗时<span class="number">0.000464</span>s</span><br><span class="line"><span class="built_in">sort</span>排序耗时<span class="number">0.000023</span>s</span><br><span class="line">数组长度为<span class="number">10000</span>时</span><br><span class="line">遍历排序耗时<span class="number">0.300904</span>s</span><br><span class="line">冒泡排序耗时<span class="number">0.274208</span>s</span><br><span class="line">快速排序耗时<span class="number">0.135769</span>s</span><br><span class="line"><span class="built_in">sort</span>排序耗时<span class="number">0.000229</span>s</span><br></pre></td></tr></table></figure><p>说明：可以根据结果看出，对于大小在[0,10]之间的整数，四种排序方法速度从大到小为：sort&gt;快速&gt;冒泡&gt;遍历</p><p>结果与对浮点数排序一致，各种比较操作、赋值操作本质上对整数或是浮点数的运算速度接近，所以结果并不会出现太大的区别</p></li></ul><h6 id="调研并实现一种算法，使得对数据集均为-0-10-之间的整数，算法复杂度低于快速排序。"><a href="#调研并实现一种算法，使得对数据集均为-0-10-之间的整数，算法复杂度低于快速排序。" class="headerlink" title="调研并实现一种算法，使得对数据集均为[0,10]之间的整数，算法复杂度低于快速排序。"></a>调研并实现一种算法，使得对数据集均为[0,10]之间的整数，算法复杂度低于快速排序。</h6><p>​          答：可用希尔排序。</p><ul><li><p>希尔排序介绍</p><ul><li>希尔排序是将待排序的数组元素按下标的一定增量分组 ，分成多个子序列，然后对各个子序列进行直接插入排序算法排序；然后依次缩减增量再进行排序，直到增量为1时，进行最后一次直接插入排序，排序结束。</li></ul></li><li><p>计数排序复杂度为$O(n^{1.3})$，当排序的数是0~10范围内的数且n&gt;2.5时，计数排序复杂度低于快排复杂度$O(nlog_2(n))$。</p></li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">output</span> = <span class="title">xier</span><span class="params">(input)</span></span></span><br><span class="line"><span class="comment">%XIER 希尔排序函数</span></span><br><span class="line">    x = input;</span><br><span class="line">    n = <span class="built_in">length</span>(x);</span><br><span class="line">    gap=<span class="built_in">floor</span>(n/<span class="number">2</span>); <span class="comment">%设置初始增量，一般取为数组长度的一半</span></span><br><span class="line">    <span class="keyword">while</span> gap&gt;<span class="number">0</span></span><br><span class="line">        <span class="built_in">i</span>=gap;</span><br><span class="line">        <span class="keyword">while</span> <span class="built_in">i</span>&lt;n</span><br><span class="line">            <span class="built_in">j</span>=<span class="built_in">i</span>;</span><br><span class="line">            current = x(<span class="built_in">i</span>+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">while</span> <span class="built_in">j</span>-gap&gt;=<span class="number">0</span> &amp;&amp; current&lt;x(<span class="built_in">j</span>-gap+<span class="number">1</span>) <span class="comment">% 若后面的值大于前面的值，则交换</span></span><br><span class="line">                x(<span class="built_in">j</span>+<span class="number">1</span>)=x(<span class="built_in">j</span>-gap+<span class="number">1</span>);</span><br><span class="line">                <span class="built_in">j</span>=<span class="built_in">j</span>-gap;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            x(<span class="built_in">j</span>+<span class="number">1</span>)=current;</span><br><span class="line">            <span class="built_in">i</span>=<span class="built_in">i</span>+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        gap=<span class="built_in">floor</span>(gap/<span class="number">2</span>); <span class="comment">% 每次按增量遍历结束后，将增量缩小为原来的1/2，直至gap=0</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    output = x;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><ul><li><p>比较</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> =<span class="number">1</span>:<span class="number">10</span> </span><br><span class="line">    x = <span class="built_in">round</span>(<span class="built_in">rand</span>(<span class="number">1</span>,<span class="number">10</span>)*<span class="number">10</span>);</span><br><span class="line">    tic;x1 = quick_sort(x,<span class="number">1</span>,<span class="built_in">length</span>(x));</span><br><span class="line">    t1(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x2 = xier(x);</span><br><span class="line">    t2(<span class="built_in">i</span>) = toc;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fprintf(<span class="string">&quot;数组长度为10时，快速排序耗时%fs\n希尔排序耗时%fs\n&quot;</span>,<span class="built_in">mean</span>(t1),<span class="built_in">mean</span>(t2))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> =<span class="number">1</span>:<span class="number">10</span> </span><br><span class="line">    x = <span class="built_in">round</span>(<span class="built_in">rand</span>(<span class="number">1</span>,<span class="number">100</span>)*<span class="number">10</span>);</span><br><span class="line">    tic;x1 = quick_sort(x,<span class="number">1</span>,<span class="built_in">length</span>(x));</span><br><span class="line">    t1(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x2 = xier(x);</span><br><span class="line">    t2(<span class="built_in">i</span>) = toc;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fprintf(<span class="string">&quot;数组长度为100时，快速排序耗时%fs\n希尔排序耗时%fs\n&quot;</span>,<span class="built_in">mean</span>(t1),<span class="built_in">mean</span>(t2))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> =<span class="number">1</span>:<span class="number">10</span> </span><br><span class="line">    x = <span class="built_in">round</span>(<span class="built_in">rand</span>(<span class="number">1</span>,<span class="number">100</span>)*<span class="number">10</span>);</span><br><span class="line">    tic;x1 = quick_sort(x,<span class="number">1</span>,<span class="built_in">length</span>(x));</span><br><span class="line">    t1(<span class="built_in">i</span>) = toc;</span><br><span class="line">    tic;x2 = xier(x);</span><br><span class="line">    t2(<span class="built_in">i</span>) = toc;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fprintf(<span class="string">&quot;数组长度为100时，快速排序耗时%fs\n希尔排序耗时%fs\n&quot;</span>,<span class="built_in">mean</span>(t1),<span class="built_in">mean</span>(t2))</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">数组长度为<span class="number">10</span>时，快速排序耗时<span class="number">0.000163</span>s</span><br><span class="line">希尔排序耗时<span class="number">0.000059</span>s</span><br><span class="line">数组长度为<span class="number">100</span>时，快速排序耗时<span class="number">0.000092</span>s</span><br><span class="line">希尔排序耗时<span class="number">0.000049</span>s</span><br><span class="line">数组长度为<span class="number">100</span>时，快速排序耗时<span class="number">0.000075</span>s</span><br><span class="line">希尔排序耗时<span class="number">0.000040</span>s</span><br></pre></td></tr></table></figure><p>可看出，希尔排序耗时均小于快速排序。</p></li></ul><h6 id="利用自己实现的算法，编写一个GUI演示窗口。要求：能够输入一列向量（长度不超过15），选择一种排序算法，动态绘制排序过程。"><a href="#利用自己实现的算法，编写一个GUI演示窗口。要求：能够输入一列向量（长度不超过15），选择一种排序算法，动态绘制排序过程。" class="headerlink" title="利用自己实现的算法，编写一个GUI演示窗口。要求：能够输入一列向量（长度不超过15），选择一种排序算法，动态绘制排序过程。"></a>利用自己实现的算法，编写一个GUI演示窗口。要求：能够输入一列向量（长度不超过15），选择一种排序算法，动态绘制排序过程。</h6><ul><li><p>编写绘图函数，并在之前编写的排序函数中当数据变化后调用绘图函数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">draw</span><span class="params">(x)</span></span></span><br><span class="line">    time=<span class="number">0.3</span>; </span><br><span class="line">    clf; <span class="comment">% 清除之前的图形</span></span><br><span class="line">    bar(x); <span class="comment">% 绘制柱状图</span></span><br><span class="line">    pause(time); <span class="comment">% 延时函数，使得结果更易观察</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p>编写APP（使用App designer）</p><p><img src="/images/port/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-11-17%20171904.jpg" style="zoom:80%;" /></p><p>共包括四个组件：</p><ul><li>EditField:用于输入待排序的数组，数组各元素之间用空格隔开即可</li><li>ListBox:输入待排序数组后，选择排序方法，共用四种供选择</li><li>StartButton:完成以上两步之后，点击该按钮即可开始排序</li><li>EditField_2:排序完成后显示排序好的（从小到大）的数组</li></ul><p>点击打开文件“sort_tool_exported.m”,点击运行即可显示GUI。</p><p>点击“Start”后，弹出figure图窗，动态显示排序过程</p><p><img src="/images/port/image-20211117172901126.png" style="zoom:67%;" /></p></li></ul><p>排序结束后，会在EditField2窗口中显示排序好的数组。</p>]]></content>
      
      
      <categories>
          
          <category> Matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/01/21/hello-world/"/>
      <url>/2022/01/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
